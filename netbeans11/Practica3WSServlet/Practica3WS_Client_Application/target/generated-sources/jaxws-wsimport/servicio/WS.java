
package servicio;

import java.util.List;
import javax.jws.WebMethod;
import javax.jws.WebParam;
import javax.jws.WebResult;
import javax.jws.WebService;
import javax.xml.bind.annotation.XmlSeeAlso;
import javax.xml.ws.Action;
import javax.xml.ws.RequestWrapper;
import javax.xml.ws.ResponseWrapper;


/**
 * This class was generated by the JAX-WS RI.
 * JAX-WS RI 2.2.8
 * Generated source version: 2.2
 * 
 */
@WebService(name = "WS", targetNamespace = "http://servicio/")
@XmlSeeAlso({
    ObjectFactory.class
})
public interface WS {


    /**
     * 
     * @param creaDate
     * @return
     *     returns java.util.List<java.lang.Object>
     */
    @WebMethod(operationName = "SearchbyCreaDate")
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "SearchbyCreaDate", targetNamespace = "http://servicio/", className = "servicio.SearchbyCreaDate")
    @ResponseWrapper(localName = "SearchbyCreaDateResponse", targetNamespace = "http://servicio/", className = "servicio.SearchbyCreaDateResponse")
    @Action(input = "http://servicio/WS/SearchbyCreaDateRequest", output = "http://servicio/WS/SearchbyCreaDateResponse")
    public List<Object> searchbyCreaDate(
        @WebParam(name = "creaDate", targetNamespace = "")
        String creaDate);

    /**
     * 
     * @param image
     * @return
     *     returns int
     */
    @WebMethod(operationName = "RegisterImage")
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "RegisterImage", targetNamespace = "http://servicio/", className = "servicio.RegisterImage")
    @ResponseWrapper(localName = "RegisterImageResponse", targetNamespace = "http://servicio/", className = "servicio.RegisterImageResponse")
    @Action(input = "http://servicio/WS/RegisterImageRequest", output = "http://servicio/WS/RegisterImageResponse")
    public int registerImage(
        @WebParam(name = "image", targetNamespace = "")
        Image image);

    /**
     * 
     * @return
     *     returns java.util.List<java.lang.Object>
     */
    @WebMethod(operationName = "ListImage")
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "ListImage", targetNamespace = "http://servicio/", className = "servicio.ListImage")
    @ResponseWrapper(localName = "ListImageResponse", targetNamespace = "http://servicio/", className = "servicio.ListImageResponse")
    @Action(input = "http://servicio/WS/ListImageRequest", output = "http://servicio/WS/ListImageResponse")
    public List<Object> listImage();

    /**
     * 
     * @param password
     * @param user
     * @return
     *     returns boolean
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "iniSession", targetNamespace = "http://servicio/", className = "servicio.IniSession")
    @ResponseWrapper(localName = "iniSessionResponse", targetNamespace = "http://servicio/", className = "servicio.IniSessionResponse")
    @Action(input = "http://servicio/WS/iniSessionRequest", output = "http://servicio/WS/iniSessionResponse")
    public boolean iniSession(
        @WebParam(name = "user", targetNamespace = "")
        String user,
        @WebParam(name = "password", targetNamespace = "")
        String password);

    /**
     * 
     * @param author
     * @return
     *     returns java.util.List<java.lang.Object>
     */
    @WebMethod(operationName = "SearchbyAuthor")
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "SearchbyAuthor", targetNamespace = "http://servicio/", className = "servicio.SearchbyAuthor")
    @ResponseWrapper(localName = "SearchbyAuthorResponse", targetNamespace = "http://servicio/", className = "servicio.SearchbyAuthorResponse")
    @Action(input = "http://servicio/WS/SearchbyAuthorRequest", output = "http://servicio/WS/SearchbyAuthorResponse")
    public List<Object> searchbyAuthor(
        @WebParam(name = "author", targetNamespace = "")
        String author);

    /**
     * 
     * @param user
     * @return
     *     returns boolean
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "comprobaUser", targetNamespace = "http://servicio/", className = "servicio.ComprobaUser")
    @ResponseWrapper(localName = "comprobaUserResponse", targetNamespace = "http://servicio/", className = "servicio.ComprobaUserResponse")
    @Action(input = "http://servicio/WS/comprobaUserRequest", output = "http://servicio/WS/comprobaUserResponse")
    public boolean comprobaUser(
        @WebParam(name = "user", targetNamespace = "")
        String user);

    /**
     * 
     * @param password
     * @param user
     * @return
     *     returns boolean
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "afegeixUser", targetNamespace = "http://servicio/", className = "servicio.AfegeixUser")
    @ResponseWrapper(localName = "afegeixUserResponse", targetNamespace = "http://servicio/", className = "servicio.AfegeixUserResponse")
    @Action(input = "http://servicio/WS/afegeixUserRequest", output = "http://servicio/WS/afegeixUserResponse")
    public boolean afegeixUser(
        @WebParam(name = "user", targetNamespace = "")
        String user,
        @WebParam(name = "password", targetNamespace = "")
        String password);

    /**
     * 
     * @param title
     * @return
     *     returns java.util.List<java.lang.Object>
     */
    @WebMethod(operationName = "SearchbyTitle")
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "SearchbyTitle", targetNamespace = "http://servicio/", className = "servicio.SearchbyTitle")
    @ResponseWrapper(localName = "SearchbyTitleResponse", targetNamespace = "http://servicio/", className = "servicio.SearchbyTitleResponse")
    @Action(input = "http://servicio/WS/SearchbyTitleRequest", output = "http://servicio/WS/SearchbyTitleResponse")
    public List<Object> searchbyTitle(
        @WebParam(name = "title", targetNamespace = "")
        String title);

    /**
     * 
     * @param image
     * @return
     *     returns int
     */
    @WebMethod(operationName = "ModifyImage")
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "ModifyImage", targetNamespace = "http://servicio/", className = "servicio.ModifyImage")
    @ResponseWrapper(localName = "ModifyImageResponse", targetNamespace = "http://servicio/", className = "servicio.ModifyImageResponse")
    @Action(input = "http://servicio/WS/ModifyImageRequest", output = "http://servicio/WS/ModifyImageResponse")
    public int modifyImage(
        @WebParam(name = "image", targetNamespace = "")
        Image image);

    /**
     * 
     * @param image
     * @return
     *     returns int
     */
    @WebMethod(operationName = "DeleteImage")
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "DeleteImage", targetNamespace = "http://servicio/", className = "servicio.DeleteImage")
    @ResponseWrapper(localName = "DeleteImageResponse", targetNamespace = "http://servicio/", className = "servicio.DeleteImageResponse")
    @Action(input = "http://servicio/WS/DeleteImageRequest", output = "http://servicio/WS/DeleteImageResponse")
    public int deleteImage(
        @WebParam(name = "image", targetNamespace = "")
        Image image);

    /**
     * 
     * @param id
     * @return
     *     returns servicio.Image
     */
    @WebMethod(operationName = "SearchbyId")
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "SearchbyId", targetNamespace = "http://servicio/", className = "servicio.SearchbyId")
    @ResponseWrapper(localName = "SearchbyIdResponse", targetNamespace = "http://servicio/", className = "servicio.SearchbyIdResponse")
    @Action(input = "http://servicio/WS/SearchbyIdRequest", output = "http://servicio/WS/SearchbyIdResponse")
    public Image searchbyId(
        @WebParam(name = "id", targetNamespace = "")
        int id);

    /**
     * 
     * @param filename
     * @param keywords
     * @param titulo
     * @param description
     * @param datacreation
     * @param autor
     * @param datasubida
     * @return
     *     returns java.util.List<java.lang.Object>
     */
    @WebMethod(operationName = "MultiSearch")
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "MultiSearch", targetNamespace = "http://servicio/", className = "servicio.MultiSearch")
    @ResponseWrapper(localName = "MultiSearchResponse", targetNamespace = "http://servicio/", className = "servicio.MultiSearchResponse")
    @Action(input = "http://servicio/WS/MultiSearchRequest", output = "http://servicio/WS/MultiSearchResponse")
    public List<Object> multiSearch(
        @WebParam(name = "titulo", targetNamespace = "")
        String titulo,
        @WebParam(name = "description", targetNamespace = "")
        String description,
        @WebParam(name = "keywords", targetNamespace = "")
        String keywords,
        @WebParam(name = "autor", targetNamespace = "")
        String autor,
        @WebParam(name = "datacreation", targetNamespace = "")
        String datacreation,
        @WebParam(name = "datasubida", targetNamespace = "")
        String datasubida,
        @WebParam(name = "filename", targetNamespace = "")
        String filename);

}
